<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Btn_up_motors.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEsAAABLCAYAAAA4TnrqAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAARNSURBVHhe7ZzR
        caMwFEVTQkpICSkhJaSElJASUkJKyOd+poSUkI8tINvBfu7MfnjPZXnMA4T9MCDhWGfmjG2BsbgWQvKA
        bw6HQ0i4wyd8w4/WL9TCS/ETre6v+Ii3qf1NmSz0ggK6tFDm+o53qf33JgslPGAqJH0rL60KUutdis+o
        eqtVpfZNR81kS0sX/g/Bb0QbVlm4yV6CcI8Kzu+rDtXkfo4L+kH9xufhOt9NUH+sQ9H2W4GNDsv+i3FQ
        9375dxd0GNr+j1qYX1FnBlvx6oIywR+WvcBshVtUQHpxtUGZ4FvYS1feLtQZwhY+2sISgr64roKlBJ31
        9USNp2ldwreqj+Gbcgv2rZb+0jTU0BP52pb1+qqH4ZtyOqjLHyw6VAE7Q361r7sOrSkoJej0bS3cLNrS
        wY8OVL+mx9eLpqmV0tVjaLFxHqiLsnoouO5FsT4C/AnGpiF/20e1tpPztq0E6+hVx66SRforfa6rg/0i
        oOc/20f5mXpvDsG6KdWrq1D2sEDN3FpS04LQwtKjn4IUGU7oc9vPVz27ypQIy4fRdAPgw/JhyuyDZfBd
        RPcka1ign0vss99ceRdW+9ofpgou63ACyoYF+mnEhgm9AKAXVlvm52tZz9pQLizQoeWHCb1DC0ZhteX+
        PTm/2KJh+VYy6rRhKiy1RnufWmWWwxHKhAV+OpMcnat8ajn4ir8Pl2/h4DO7J5uGBX7CPjnQhMmwBsvl
        U2qdNYUiYfmdnJwtuPWmwvJzyMnQ1xLyhgX+A4+ezeBoWBL8BHdyvTWEfGGB75h7P9OmhJNhSfAD2s0m
        25AnLJg9AodoWL4PDG37HCFbWLO/fQiFJcGP7jeZbMP2YcFZ/YrWnfMe2HR0D9uGBcMzVngACXPDGh7q
        a3/pm4flpyazflSEWWFJ8CeRVSfbsF1YsOiwgNlhSfA71f2KsdTBdrsni8PSNtz2Tg4TUsJZYUk4u0VP
        CeuHBaucymFJWGf3lVPCJmFpkmwVPXuQCGeHJcF+VFRdFs8dYbPDUK1rUQVhUVgSNGxZpZOHbcJaQ1gc
        1ppCDSsq1LCiQg0rKtSwokINKyrUsKJCDSsq1LCiQg0rKtSwokINKyrUsKJCDSsq1LCiQg0rKtSwokIN
        KyrUsKJCDSsq1LCiQg0rKtSwokINKypYWLrgpIZ1TEjeFVbsfkMv7C0sq49aWHflSdE7WU3YTVigyxH0
        RDZ3slozK3qPtAl7Cstf6tncI72bu+8l/MBfekwtzymM7r7311Xtop/YgzD+X4d2gR9L7KKjLy1Yd9Bd
        FGcLfOvSY/bba/ckTP8XTbuC77uuNjDwFxD3rosdruh7/6sLDGL/n9UVjAOr/8xm6w0LmsJ+YFLzIpWt
        cp3mXoRl//lngk6d/jYPU2cJnT0vWQWU2jcdhpMNIlnoBbWo1Ia/kzoET94RmyxMqY2hglP6Nga5RNUP
        q/5qXRoBBLuWw80/tqsx5iStoQQAAAAASUVORK5CYII=
</value>
  </data>
</root>